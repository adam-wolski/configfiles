snippet d
"""${0}"""
endsnippet
snippet blender
import bpy


bl_info = {
	'name': "${1:name}",
	'description': "${2:description}",
	'author': "miniukof",
	'version': (0, 0, 1),
	'blender': (2, 77, 0),
	'category': "${3:Mesh}",
}
endsnippet
snippet bloper
class ${1:name}(bpy.types.Operator):
	bl_description = "${2:description}"
	bl_idname = "${3:idname}"
	bl_label = "${4:bllabel}"
	bl_options = ${5:\{"REGISTER", "UNDO"\}}

	def execute(self, context):
		pass
endsnippet
snippet blregmod
def register():
	bpy.utils.register_module(__name__)

def unregister():
	bpy.utils.unregister_module(__name__)
endsnippet
snippet blreg
def register():
	bpy.utils.register_class(${1:classname})

def unregister():
	bpy.utils.unregister_class($1)
endsnippet
snippet blmodal
def invoke(self, context, event):
	context.window_manager.modal_handler_add(self)
	return {'RUNNING_MODAL'}

def modal(self, context, event):
	return {'RUNNING_MODAL'}
endsnippet
